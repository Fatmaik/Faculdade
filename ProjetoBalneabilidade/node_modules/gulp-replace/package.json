{
  "_args": [
    [
      {
        "raw": "gulp-replace@^1.0.0",
        "scope": null,
        "escapedName": "gulp-replace",
        "name": "gulp-replace",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "C:\\wamp64\\www\\Pessoal\\FACULDADE\\Faculdade\\ProjetoBalneabilidade\\node_modules\\semantic-ui"
    ]
  ],
  "_from": "gulp-replace@>=1.0.0 <2.0.0",
  "_id": "gulp-replace@1.0.0",
  "_inCache": true,
  "_location": "/gulp-replace",
  "_nodeVersion": "9.6.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/gulp-replace_1.0.0_1526506908138_0.9015867519420631"
  },
  "_npmUser": {
    "name": "lazd",
    "email": "lazdnet@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.3",
    "process-nextick-args": "2.0.0",
    "safe-buffer": "5.1.2",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "raw": "gulp-replace@^1.0.0",
    "scope": null,
    "escapedName": "gulp-replace",
    "name": "gulp-replace",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/semantic-ui"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-replace/-/gulp-replace-1.0.0.tgz",
  "_shasum": "b32bd61654d97b8d78430a67b3e8ce067b7c9143",
  "_shrinkwrap": null,
  "_spec": "gulp-replace@^1.0.0",
  "_where": "C:\\wamp64\\www\\Pessoal\\FACULDADE\\Faculdade\\ProjetoBalneabilidade\\node_modules\\semantic-ui",
  "author": {
    "name": "Larry Davis",
    "email": "lazdnet@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/lazd/gulp-replace/issues"
  },
  "dependencies": {
    "istextorbinary": "2.2.1",
    "readable-stream": "^2.0.1",
    "replacestream": "^4.0.0"
  },
  "description": "A string replace plugin for gulp",
  "devDependencies": {
    "concat-stream": "^1.5.2",
    "mocha": "^5.1.1",
    "should": "^13.2.1",
    "vinyl": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-lgdmrFSI1SdhNMXZQbrC75MOl1UjYWlOWNbNRnz+F/KHmgxt3l6XstBoAYIdadwETFyG/6i+vWUSCawdC3pqOw==",
    "shasum": "b32bd61654d97b8d78430a67b3e8ce067b7c9143",
    "tarball": "https://registry.npmjs.org/gulp-replace/-/gulp-replace-1.0.0.tgz",
    "fileCount": 4,
    "unpackedSize": 8294,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa/KWcCRA9TVsSAnZWagAAn0AP/1y5Ato9fqHBDViRYc7f\ntoIG7sk6TqVCU9m181pdE1b8n4lyI1mBi/qJ1Re0HxYPK2/cF3EudvwxJTas\ngQTSkcpU1Iuco848ZorUq8GaSVcgek2mioydLQp2gtDIF2usTupcq/Fmy3/Z\nGM2iI86kC8ewgT/3AvsSj3MgJPA2VVial2OMBxkAMWLforgPta0Iwt9A7v69\n2h0J6Ut1YJb4wwvOlWVKBDU0vHzxu12auTbTAAUt2W+dzkvbXQ/Lvms9MNd2\nMC+PHBhLsGQKWpYxXSZfyyuBnJiqWXd6QfaooKE/OJenJPMLYBQmA+/54SLn\nYzVfzZu5PfDSN4Fj4fGvwAmAI0vnvNGDzglU5Ijd9LIZjcCdSsI+teDgv4cK\n/QlCVxCi0UtIwy3xYMhXUC+7wyOYTMFsZXP8g9ulaAnsH9Jhh+dbdahfWqc4\neiFStGshVr/bfffORmz0HwFJ+Bb4SwJ2hJO843dEHppqFLckzrsFDUt9j8Mq\n0LdVTFdFIfY0XpHX+zHENRxgW5Spnr9y5jfJbIsttAhB0YEvSgR/PfwdwXlz\nmKeV4s/NErUNxNlsY4qUluMfFAuks1Ggg3eGA7jimaYgn5kkG8Yj+k4vkKvz\nK2H4gNPq1i+cMsO09BayvnDQjsxtzdoEnejB/X/Dq6q/pqKSD9dS3rXAux/r\nsf61\r\n=Y8r5\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.10"
  },
  "gitHead": "aaad34e4fa0e4a6c1eb74baac337735fe847398f",
  "homepage": "https://github.com/lazd/gulp-replace#readme",
  "keywords": [
    "gulpplugin",
    "replace"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "lazd",
      "email": "lazdnet@gmail.com"
    }
  ],
  "name": "gulp-replace",
  "optionalDependencies": {},
  "readme": "# gulp-replace [![NPM version][npm-image]][npm-url] [![Build status][travis-image]][travis-url]\n> A string replace plugin for gulp 3\n\n## Usage\n\nFirst, install `gulp-replace` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-replace\n```\n\nThen, add it to your `gulpfile.js`:\n\n### Simple string replace\n```javascript\nvar replace = require('gulp-replace');\n\ngulp.task('templates', function(){\n  gulp.src(['file.txt'])\n    .pipe(replace('bar', 'foo'))\n    .pipe(gulp.dest('build/'));\n});\n```\n\n### Simple regex replace\n```javascript\nvar replace = require('gulp-replace');\n\ngulp.task('templates', function(){\n  gulp.src(['file.txt'])\n    // See http://mdn.io/string.replace#Specifying_a_string_as_a_parameter\n    .pipe(replace(/foo(.{3})/g, '$1foo'))\n    .pipe(gulp.dest('build/'));\n});\n```\n\n### String replace with function callback\n```javascript\nvar replace = require('gulp-replace');\n\ngulp.task('templates', function(){\n  gulp.src(['file.txt'])\n    .pipe(replace('foo', function(match) {\n      // Replaces instances of \"foo\" with \"oof\"\n      return match.reverse();\n    }))\n    .pipe(gulp.dest('build/'));\n});\n```\n\n### Regex replace with function callback\n```javascript\nvar replace = require('gulp-replace');\n\ngulp.task('templates', function(){\n  gulp.src(['file.txt'])\n    .pipe(replace(/foo(.{3})/g, function(match, p1, offset, string) {\n      // Replace foobaz with barbaz and log a ton of information\n      // See http://mdn.io/string.replace#Specifying_a_function_as_a_parameter\n      console.log('Found ' + match + ' with param ' + p1 + ' at ' + offset + ' inside of ' + string);\n      return 'bar' + p1;\n    }))\n    .pipe(gulp.dest('build/'));\n});\n```\n\n### Function callback with file object\n```javascript\nvar replace = require('gulp-replace');\n\ngulp.task('templates', function(){\n  gulp.src(['file.txt'])\n    .pipe(replace('filename', function() {\n      // Replaces instances of \"filename\" with \"file.txt\"\n      // this.file is also available for regex replace\n      // See https://github.com/gulpjs/vinyl#instance-properties for details on available properties\n      return this.file.relative;\n    }))\n    .pipe(gulp.dest('build/'));\n});\n```\n\n\n## API\n\ngulp-replace can be called with a string or regex.\n\n### replace(string, replacement[, options])\n\n#### string\nType: `String`\n\nThe string to search for.\n\n#### replacement\nType: `String` or `Function`\n\nThe replacement string or function. If `replacement` is a function, it will be called once for each match and will be passed the string that is to be replaced.\n\nThe value of `this.file` will be equal to the [vinyl instance](https://github.com/gulpjs/vinyl#instance-properties) for the file being processed.\n\n### replace(regex, replacement[, options])\n\n#### regex\nType: `RegExp`\n\nThe regex pattern to search for. See the [MDN documentation for RegExp] for details.\n\n#### replacement\nType: `String` or `Function`\n\nThe replacement string or function. See the [MDN documentation for String.replace] for details on special replacement string patterns and arguments to the replacement function.\n\nThe value of `this.file` will be equal to the [vinyl instance](https://github.com/gulpjs/vinyl#instance-properties) for the file being processed.\n\n### gulp-replace options\n\nAn optional third argument, `options`, can be passed.\n\n#### options\nType: `Object`\n\n##### options.skipBinary\nType: `boolean`  \nDefault: `true`\n\nSkip binary files. This option is true by default. If you want to replace content in binary files, you must explicitly set it to false\n\n\n[MDN documentation for RegExp]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n[MDN documentation for String.replace]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n\n[travis-url]: http://travis-ci.org/lazd/gulp-replace\n[travis-image]: https://secure.travis-ci.org/lazd/gulp-replace.svg?branch=master\n[npm-url]: https://npmjs.org/package/gulp-replace\n[npm-image]: https://badge.fury.io/js/gulp-replace.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/lazd/gulp-replace.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.0"
}
